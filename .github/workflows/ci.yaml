name: CI/CD

on: [push]

jobs:
  CI:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v4.1.1 

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v5.0.0
      with:
        context: ./netflix-clone-react-app
        file: netflix-clone-react-app/Dockerfile
        push: true
        tags: |
          matheusnicolay/netflix-clone-react-app:${{ github.run_number }}
          matheusnicolay/netflix-clone-react-app:latest

  CD:
     runs-on: ubuntu-latest
     needs: [CI]
     steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4.1.1 
        
      - name: Configurar Credenciais AWS 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Configurar o kubeConfig
        run: aws eks update-kubeconfig --name eks-netflixclone --region ${{ secrets.AWS_REGION }}

      - name: Deploy ClusterIssuer
        uses: Azure/k8s-deploy@v4.9
        with:
          namespace: 'cert-manager'
          manifests: |
            ./kubernetes/cert-manager.yaml
          images: |
            matheusnicolay/netflix-clone-react-app:${{ github.run_number }}
            
      - name: Deploy ClusterIssuer in kube-system
        uses: Azure/k8s-deploy@v4.9
        with:
          #namespace: 'cert-manager'
          manifests: |
            ./kubernetes/cert-manager-kube.yaml
          images: |
            matheusnicolay/netflix-clone-react-app:${{ github.run_number }}

      - name: Deploy Application Kubernetes cluster
        uses: Azure/k8s-deploy@v4.9
        with:
          manifests: |
            ./kubernetes/cluster-issuer.yaml
            https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.2/deploy/static/provider/cloud/deploy.yaml
            ./kubernetes/deployment.yaml
            ./kubernetes/service.yaml
          images: |
            matheusnicolay/netflix-clone-react-app:${{ github.run_number }}
            
      - name: Obter EXTERNAL-IP/Cname do Ingress
        id: get-external-ip
        run: |
          EXTERNAL_IP=$(kubectl -n default get service netflix-app -o jsonpath='{.status.loadBalancer.ingress[0].hostname}') 
          echo "EXTERNAL_IP=${EXTERNAL_IP}" >> $GITHUB_ENV

      #- name: Set env
      # run: echo "LOADBALANCER_CNAME=$(kubectl -n default get service netflix-app | awk 'NR>1 {print $4}')" >> $GITHUB_ENV
        
      - name: Criar entrada DNS cloudflare
        uses: rez0n/create-dns-record@v2.1
        with:
          type: "CNAME"
          name: "netflixclone.nmatheus.cloud"
          content: ${{ env.EXTERNAL_IP }}
          ttl: 1
          proxied: true
          token: ${{ secrets.CLOUDFLARE_TOKEN }}
          zone: ${{ secrets.CLOUDFLARE_ZONE }}

      - name: Deploy Ingress in Kubernetes cluster
        uses: Azure/k8s-deploy@v4.9
        with:
          manifests: |
            ./kubernetes/ingress.yaml
          images: |
            matheusnicolay/netflix-clone-react-app:${{ github.run_number }}

      
